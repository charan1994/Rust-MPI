Bootstrap: docker
From: debian:stretch

%environment

    #export I_MPI_ROOT=/intel-mpi
    #export PLATFORM=intel64

    #LD_LIBRARY_PATH="${I_MPI_ROOT}/${PLATFORM}/lib/release:${I_MPI_ROOT}/${PLATFORM}/lib:${LD_LIBRARY_PATH}"; export LD_LIBRARY_PATH
    #LIBRARY_PATH="${I_MPI_ROOT}/${PLATFORM}/lib/release:${I_MPI_ROOT}/${PLATFORM}/lib:${LIBRARY_PATH}"; export LIBRARY_PATH
    #CPATH="${I_MPI_ROOT}/${PLATFORM}/include:${CPATH}"; export CPATH

    #PATH="${I_MPI_ROOT}/${PLATFORM}/libfabric/bin:${PATH}"; export PATH

    #LD_LIBRARY_PATH="${I_MPI_ROOT}/${PLATFORM}/libfabric/lib:${LD_LIBRARY_PATH}"; export LD_LIBRARY_PATH
    #LIBRARY_PATH="${I_MPI_ROOT}/${PLATFORM}/libfabric/lib:${LIBRARY_PATH}"; export LIBRARY_PATH

    #FI_PROVIDER_PATH="${I_MPI_ROOT}/${PLATFORM}/libfabric/lib/prov"; export FI_PROVIDER_PATH

%post
    #MPI_ROOT=/intel-mpi

    # package IB, RDMA and SHMEM components
    PACKAGES="g++ librdmacm1 curl ca-certificates"

    apt-get update -y
    apt-get install -y --no-install-recommends $PACKAGES

    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
    export PATH=~/.cargo/bin:$PATH
    . $HOME/.cargo/env

    # cmake or any other build system goes here
    cd /opt/hello-rust
    cargo build --release

    # clean unwanted content (including MPI)
    apt clean

    rm -rf /var/lib/apt/lists/*
    rm -rf /var/tmp/*

    rm -rf /intel-mpi

%runscript
    . $HOME/.cargo/env && cd /opt/hello-rust/target/release && ./hello-rust

%files
    # as per on access node /util/academic/intel/20.1/compilers_and_libraries_2020.1.217/linux/mpi /intel-mpi
    hello-rust/ /opt/

